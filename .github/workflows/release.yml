name: Auto Release on Commit

on:
  push:
    branches:
      - main

permissions:
  contents: write
  actions: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from commit message or increment by 10
        id: get_version
        run: |
          commit_msg="${{ github.event.head_commit.message }}"
          first_line=$(echo "$commit_msg" | head -n1)
          
          # コミットメッセージの最初の行からvx.x.xまたはx.x.xを抽出
          if echo "$first_line" | grep -qE '^v?[0-9]+\.[0-9]+\.[0-9]+'; then
            # バージョンが見つかった場合
            version=$(echo "$first_line" | grep -oE '^v?[0-9]+\.[0-9]+\.[0-9]+')
            # vがなければ追加
            if [[ ! "$version" =~ ^v ]]; then
              version="v$version"
            fi
            echo "new_tag=$version" >> $GITHUB_OUTPUT
            echo "from_commit=true" >> $GITHUB_OUTPUT
            echo "Found version in commit message: $version"
          else
            # バージョンが見つからなかった場合、既存タグから10進数で繰り上げ
            prev=$(git tag -l 'v[0-9]*.[0-9]*.[0-9]*' | sort -V | tail -n1)
            if [ -z "$prev" ]; then
              new_tag="v0.1.0"
            else
              # vX.Y.Z を数値に分解
              vers=${prev#v}
              IFS='.' read -r MA MI PA <<< "$vers"
              
              # パッチバージョンに10を足す
              PA=$((PA + 10))
              
              # 10進数の桁上がり処理
              if [ $PA -ge 100 ]; then
                MI=$((MI + PA / 100))
                PA=$((PA % 100))
              fi
              
              if [ $MI -ge 100 ]; then
                MA=$((MA + MI / 100))
                MI=$((MI % 100))
              fi
              
              new_tag="v${MA}.${MI}.${PA}"
            fi
            echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
            echo "from_commit=false" >> $GITHUB_OUTPUT
            echo "Incremented version by 10: $new_tag (from $prev)"
          fi

      - name: Check if tag already exists
        id: check_tag
        run: |
          new_tag="${{ steps.get_version.outputs.new_tag }}"
          if git rev-parse -q --verify "refs/tags/${new_tag}" >/dev/null; then
            echo "Tag ${new_tag} already exists. Skipping release."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          new_tag="${{ steps.get_version.outputs.new_tag }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          if [ "${{ steps.get_version.outputs.from_commit }}" == "true" ]; then
            git tag -a "$new_tag" -m "Release $new_tag (from commit message)"
          else
            git tag -a "$new_tag" -m "Release $new_tag (auto-incremented)"
          fi
          
          git push origin "$new_tag"

      - name: Create ZIP of current commit
        if: steps.check_tag.outputs.exists == 'false'
        id: zip
        run: |
          zipname="site-${{ steps.get_version.outputs.new_tag }}.zip"
          zip -r "$zipname" . -x "./.git/*" "./.github/*"
          echo "zipname=$zipname" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.new_tag }}
          name: Release ${{ steps.get_version.outputs.new_tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ${{ steps.zip.outputs.zipname }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
