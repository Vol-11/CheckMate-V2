name: Auto Release on Commit

on:
  push:
    branches:
      - main   # 必要に応じてブランチを指定

permissions:
  contents: write   # tag push / release 作成に必要
  actions: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # タグ解析に必要（全履歴/タグ取得）

      - name: Get latest semver tag (vX.Y.Z) or default v0.0.0
        id: get_prev_tag
        run: |
          # 既存の semver タグを収集
          prev=$(git tag -l 'v[0-9]*.[0-9]*.[0-9]*' | sort -V | tail -n1)
          if [ -z "$prev" ]; then
            echo "prev=v0.0.0" >> $GITHUB_OUTPUT
          else
            echo "prev=$prev" >> $GITHUB_OUTPUT
          fi

      - name: Bump patch version
        id: bump
        run: |
          prev="${{ steps.get_prev_tag.outputs.prev }}"
          # vX.Y.Z を数値に分解
          vers=${prev#v}
          IFS='.' read -r MA MI PA <<< "$vers"
          PA=$((PA + 1))
          new="v${MA}.${MI}.${PA}"
          echo "new_tag=$new" >> $GITHUB_OUTPUT

      - name: Create and push tag (if not exists)
        id: push_tag
        run: |
          new="${{ steps.bump.outputs.new_tag }}"
          # 競合回避：同名タグが存在すればスキップ
          if git rev-parse -q --verify "refs/tags/${new}" >/dev/null; then
            echo "Tag ${new} already exists. Skipping tag creation."
            echo "created=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "$new" -m "Release $new"
          git push origin "$new"
          echo "created=true" >> $GITHUB_OUTPUT

      - name: Create ZIP of current commit
        id: zip
        run: |
          # リポジトリの全ファイルを zip（.git や GitHub のメタは除外）
          zipname="site-${{ steps.bump.outputs.new_tag }}.zip"
          # -x で除外したいパスがあれば追記（例: node_modules, .git, .github など）
          zip -r "$zipname" . \
            -x "./.git/*" "./.github/*"
          echo "zipname=$zipname" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          name: Release ${{ steps.bump.outputs.new_tag }}
          draft: false
          prerelease: false
          generate_release_notes: false
          files: ${{ steps.zip.outputs.zipname }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
